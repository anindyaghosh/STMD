clear all

fixed.target_movement = 'rotational';
fixed.pixel2PR = 12;
fixed.sigma_hw_degree = 1.4;
fixed.cs_kernel_size = 5;
fixed.hfov = 40;
fixed.vfov = 20;
fixed.Ts=0.001;
fixed.saccade_duration = 0.05;
fixed.make_histograms = false;
fixed.showimagery = false;
fixed.traj_range = 1:30;
fixed.tix_after_saccade = 30;
fixed.trajfilename = 'trajectories19_09_06.mat';
fixed.image_name = 'HDR_Botanic_RGB.png';
fixed.obs_model_filename = 'obs_model_4_botanic.mat';

outer_var.ranges.tracker = {'prob','facilitation'};
outer_var.ranges.tracker_num = 1:numel(outer_var.ranges.tracker);

outer_var.ranges.draw_distractors = [false true];
outer_var.ranges.draw_distractors_num = 1:numel(outer_var.ranges.draw_distractors);

outer_var.ranges.do_predictive_turn = [false true];
outer_var.ranges.do_predictive_turn_num = 1:numel(outer_var.ranges.do_predictive_turn);

outer_var.ranges.do_saccades = [false true];
outer_var.ranges.do_saccades_num = 1:numel(outer_var.ranges.do_saccades);

[outer_var.sets.tracker_num,...
    outer_var.sets.draw_distractors_num,...
    outer_var.sets.do_predictive_turn_num,...
    outer_var.sets.do_saccades_num]=ndgrid(...
    outer_var.ranges.tracker_num,...
    outer_var.ranges.draw_distractors_num,...
    outer_var.ranges.do_predictive_turn_num,...
    outer_var.ranges.do_saccades_num);

outer_var.sets.tracker = cell(size(outer_var.sets.tracker_num));
outer_var.sets.draw_distractors = false(size(outer_var.sets.tracker));
outer_var.sets.do_predictive_turn = false(size(outer_var.sets.tracker));
outer_var.sets.do_saccades = false(size(outer_var.sets.tracker));

for k=1:numel(outer_var.sets.tracker_num)
    outer_var.sets.tracker{k} = outer_var.ranges.tracker{outer_var.sets.tracker_num(k)};
    outer_var.sets.draw_distractors(k) = outer_var.ranges.draw_distractors(outer_var.sets.draw_distractors_num(k));
    outer_var.sets.do_predictive_turn(k) = outer_var.ranges.do_predictive_turn(outer_var.sets.do_predictive_turn_num(k));
    outer_var.sets.do_saccades(k) = outer_var.ranges.do_saccades(outer_var.sets.do_saccades_num(k));
end

params_range.fac.gain =[1 2 4];
params_range.fac.sigma = [3/2.35482 5/2.35482 10/2.35482];
params_range.fac.kernel_spacing = [5 9];
params_range.fac.emd_timeconstant = 0.04;
params_range.fac.lpf_timeconstant = [0.1 0.2];
params_range.fac.direction_predict_distance = [3 7];
params_range.fac.direction_predict_threshold = [0.1 0.2 0.4];
params_range.fac.direction_turn_threshold = [0 0.2];
params_range.fac.tix_between_saccades = [30 60];
params_range.fac.output_integration = 1;

[params_set.fac.gain,...
params_set.fac.sigma,...
params_set.fac.kernel_spacing,...
params_set.fac.emd_timeconstant,...
params_set.fac.lpf_timeconstant,...
params_set.fac.direction_predict_distance,...
params_set.fac.direction_predict_threshold,...
params_set.fac.direction_turn_threshold,...
params_set.fac.tix_between_saccades,...
params_set.fac.output_integration]=ndgrid(...
    params_range.fac.gain,...
    params_range.fac.sigma,...
    params_range.fac.kernel_spacing,...
    params_range.fac.emd_timeconstant,...
    params_range.fac.lpf_timeconstant,...
    params_range.fac.direction_predict_distance,...
    params_range.fac.direction_predict_threshold,...
    params_range.fac.direction_turn_threshold,...
    params_range.fac.tix_between_saccades,...
    params_range.fac.output_integration);

params_range.distractors.num_distractors = 20;
params_range.distractors.min_distractor_hd = 0;
params_range.distractors.min_distractor_forward = 0.4;
params_range.distractors.max_distractor_hd = 1.2;
params_range.distractors.max_distractor_forward = 2;
params_range.distractors.max_distractor_elevation_mag = 0.15;
params_range.distractors.luminance_min = 0;
params_range.distractors.luminance_max = 1;
params_range.distractors.assumed_fwd_vel = 1;

[params_set.distractors.num_distractors,...
params_set.distractors.min_distractor_hd,...
params_set.distractors.min_distractor_forward,...
params_set.distractors.max_distractor_hd,...
params_set.distractors.max_distractor_forward,...
params_set.distractors.max_distractor_elevation_mag,...
params_set.distractors.luminance_min,...
params_set.distractors.luminance_max,...
params_set.distractors.assumed_fwd_vel]=ndgrid(...
    params_range.distractors.num_distractors,...
    params_range.distractors.min_distractor_hd,...
    params_range.distractors.min_distractor_forward,...
    params_range.distractors.max_distractor_hd,...
    params_range.distractors.max_distractor_forward,...
    params_range.distractors.max_distractor_elevation_mag,...
    params_range.distractors.luminance_min,...
    params_range.distractors.luminance_max,...
    params_range.distractors.assumed_fwd_vel);

params_range.prob.pos_std_scalar = [0.5 1 2];
params_range.prob.output_threshold_scalar = [0.002 0.004 0.008];
params_range.prob.acquisition_threshold = [0.25e-5 0.5e-5 1e-5];
params_range.prob.vel_std_scalar = [40 80 120];
params_range.prob.turn_threshold = [2e-5 3e-5 6e-5];
params_range.prob.reliability = 0.99;
params_range.prob.lost_position_threshold = [0.001 0.002 0.004];
params_range.prob.min_turn_gap = 10;
params_range.prob.tix_ignore_scalar = 0.05;
params_range.prob.output_integration = 4;
params_range.prob.likelihood_threshold = [1e-8 5e-8];

[params_set.prob.pos_std_scalar,...
    params_set.prob.output_threshold_scalar,...
    params_set.prob.acquisition_threshold,...
    params_set.prob.vel_std_scalar,...
    params_set.prob.turn_threshold,...
    params_set.prob.reliability,...
    params_set.prob.lost_position_threshold,...
    params_set.prob.min_turn_gap,...
    params_set.prob.tix_ignore_scalar,...
    params_set.prob.output_integration,...
    params_set.prob.likelihood_threshold]=ndgrid(...
        params_range.prob.pos_std_scalar,...
        params_range.prob.output_threshold_scalar,...
        params_range.prob.acquisition_threshold,...
        params_range.prob.vel_std_scalar,...
        params_range.prob.turn_threshold,...
        params_range.prob.reliability,...
        params_range.prob.lost_position_threshold,...
        params_range.prob.min_turn_gap,...
        params_range.prob.tix_ignore_scalar,...
        params_range.prob.output_integration,...
        params_range.prob.likelihood_threshold);
    
% For each outer_ix, fill in the inner_ix which applies based on the
% tracker setting
prob_num = numel(params_set.prob.pos_std_scalar); % How many tests per prob tracker
fac_num = numel(params_set.fac.gain); % How many tests per fac tracker

inds_count = 0;
for k=1:numel(outer_var.sets.tracker)
    if(strcmp(outer_var.sets.tracker{k},'prob'))
        inds_count = inds_count + prob_num;
    elseif(strcmp(outer_var.sets.tracker{k},'facilitation'))
        inds_count = inds_count + fac_num;
    else
        error('something')
    end
end

outer_ix = NaN(inds_count,1);
inner_ix = NaN(inds_count,1);
curr_ind=1;

for k = 1:numel(outer_var.sets.tracker)
    if(strcmp(outer_var.sets.tracker{k},'prob'))
        inds_range=curr_ind:curr_ind+prob_num-1;
        curr_ind = curr_ind+prob_num;
    elseif(strcmp(outer_var.sets.tracker{k},'facilitation'))
        inds_range=curr_ind:curr_ind+fac_num-1;
        curr_ind = curr_ind+fac_num;
    else
        error('something')
    end
    outer_ix(inds_range) = k;
    inner_ix(inds_range) = 1:numel(inds_range);
end

this_script = mfilename;
save('E:\PHD\conf2\data\trackerinfo\TrackerParamFile19_09_14.mat',...
    'this_script','outer_ix','inner_ix','fixed','params_set','params_range','outer_var')
    